apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "im.adamant.android"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode getVersionCode(minSdkVersion, scmVersion.version)
        versionName scmVersion.version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        lintOptions {
            abortOnError false
        }
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        buildConfigField "int", "MAX_WRONG_PINCODE_ATTEMTS", "5"
        buildConfigField "int", "DEFAULT_OPERATION_TIMEOUT_SECONDS", "60"
        buildConfigField "int", "LOCAL_NOTIFICATION_SERVICE_CALL_MINUTES_DELAY", "5"
        buildConfigField "int", "MAX_ERRORS_FOR_CHANGE_NODE", "3"
        buildConfigField "int", "PING_SECONDS_DELAY", "4"
        buildConfigField "int", "UPDATE_BALANCE_SECONDS_DELAY", "30"
        buildConfigField "double", "ADM_TRANSFER_FEE", "0.5"
        buildConfigField "java.math.BigDecimal", "ADM_MINIMUM_COST", "new java.math.BigDecimal(\"0.001\")"

        buildConfigField "String", "API_BASE", "\"/api/\""
        buildConfigField "String", "WELCOME_MESSAGE_ADDR", "\"U15423595369615486571\""
        buildConfigField "String", "MESSAGE_CTNCR_ADDR", "\"U7047165086065693428\""
        buildConfigField "boolean", "RELEASE_LOG", "false"

        buildConfigField "String", "PROD_NET_DEFAULT_NODE_1", "\"https://clown.adamant.im\""
        buildConfigField "String", "PROD_NET_DEFAULT_NODE_2", "\"https://lake.adamant.im\""
        buildConfigField "String", "PROD_NET_DEFAULT_NODE_3", "\"https://endless.adamant.im\""
        buildConfigField "String", "PROD_NET_DEFAULT_NODE_4", "\"https://debate.adamant.im\""
        buildConfigField "String", "PROD_NET_DEFAULT_NODE_5", "\"https://bid.adamant.im\""
        buildConfigField "String", "PROD_NET_DEFAULT_NODE_6", "\"https://unusual.adamant.im\""

        buildConfigField "String", "TEST_NET_DEFAULT_NODE_1", "\"http://163.172.132.38:36667\""
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "TEST_NET", getPropTestNet('test_net')
            buildConfigField "String", "DEFAULT_NOTIFICATION_SERVICE_ADDRESS", "\"U15243615587463307445\""

            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "TEST_NET", getPropTestNet('test_net')
            buildConfigField "String", "DEFAULT_NOTIFICATION_SERVICE_ADDRESS", "\"U15243615587463307445\""

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDirs = ['src/main/jniLibs']
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == "debug") {
                outputFileName = "adamant-v" + scmVersion.version + "(" + defaultConfig.versionCode + ")" + ".apk"
            } else {
                outputFileName = "adamant-" + variant.buildType.name + ".apk"
            }
        }
    }
}

def getPropTestNet(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] == null)
            throw new GradleException('Property "test_net" must be defined in your local.properties')
        else
            return props[propName]
    } else {
        return "false"
    }
}

scmVersion {
    localOnly = true
}

static def getVersionCode(minSdk, versionName) {
    def (cleanVersion, other) = versionName.tokenize('-')
    def (major, minor, path) = cleanVersion.tokenize('.')
    return minSdk.apiLevel * 10000000 + major.toInteger() * 10000 + minor.toInteger() * 100 + path.toInteger()
}

ext {
    supportLibraryVersion = "28.0.0-rc02"
    moxyVersion = "1.5.5"
    daggerVersion = "2.16"
    butterKnifeVersion = "10.0.0"
    retrofitVersion = "2.4.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.vectordrawable:vectordrawable:1.0.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta1"
    implementation "net.java.dev.jna:jna:4.5.1@aar"
    implementation "com.goterl.lazycode:lazysodium-android:2.2.0@aar"
    implementation "io.github.novacrypto:BIP39:0.1.9"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "com.arello-mobile:moxy:$moxyVersion"
    implementation "ru.terrakok.cicerone:cicerone:3.0.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    implementation "com.google.android.material:material:1.0.0"
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    implementation "com.github.curioustechizen.android-ago:library:1.4.0"
    implementation "me.dm7.barcodescanner:zxing:1.9.8"
    implementation "com.github.kenglxn.QRGen:android:2.5.0"
    implementation "gun0912.ted:tedpermission:2.2.0"
    implementation "com.github.stealthcopter:AndroidNetworkTools:0.4.0"
    implementation "androidx.transition:transition:1.0.1"
    implementation "com.github.franmontiel:LocaleChanger:0.9.2"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0-alpha2'
    implementation "com.google.firebase:firebase-messaging:17.3.4"
    implementation "com.allattentionhere:fabulousfilter:0.0.5"
    implementation "androidx.core:core:1.0.2"
    implementation "com.yarolegovich:discrete-scrollview:1.4.9"
    implementation "com.agrawalsuneet.androidlibs:loaderspack:1.2.3"

    annotationProcessor "com.arello-mobile:moxy-compiler:$moxyVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    testAnnotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"

    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation "org.mockito:mockito-core:2.19.1"
    testImplementation 'org.robolectric:robolectric:4.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.1"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.6.1"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:1.6.1" //???
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}

apply plugin: 'com.google.gms.google-services'